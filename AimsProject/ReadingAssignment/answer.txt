Question 1:Reading Assignment: Please answer three questions below:
- What are the advantages of Polymorphism?
- How is Inheritance useful to achieve Polymorphism in Java?
- What are the differences between Polymorphism and Inheritance in Java?

=> Answer:
- Advantages of Polymorphism:
	+ Code Reusability: Promotes code reuse and simplifies maintenance.
	+ Flexibility and Extensibility: Easily adapts to changing requirements.
- Inheritance and Polymorphism in Java:
	+ How Inheritance Achieves Polymorphism: Through method overriding, allowing subclasses to be treated as their superclass.
- Differences between Polymorphism and Inheritance in Java:
	+ Concept:
		Polymorphism: Runtime concept, objects of different types treated as a common type.
		Inheritance: Compile-time concept, new class inherits properties from an existing class.
	+ Usage:
		Polymorphism: Involves method overriding and interfaces.
		Inheritance: Used for code reuse, establishes "is-a" relationship.
	+ Scope:
		Polymorphism: Broader, includes method overloading, interfaces, and generics.
		Inheritance: Specific mechanism related to code reuse and class organization.
Question 2: Alternatively, to compare items in the cart, instead of using the Comparator class I have
mentioned, you can use the Comparable interface1 and override the compareTo()method. You can
refer to the Java docs to see the information of this interface.
Suppose we are taking this Comparable interface approach.
- What class should implement the Comparable interface?
- In those classes, how should you implement the compareTo()method to reflect the ordering that
we want?
- Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this
Comparable interface approach?
- Suppose the DVDs have a different ordering rule from the other media types, that is by title, then
decreasing length, then cost. How would you modify your code to allow this?

=>Answer:
- Media class should implement the Comparable interface
- The answer can be found in `Media.java` file.
- No we cannot. The Comparable interface assumes that there is only one natural ordering for the objects being compared.
- We can override the compareTo method in Disc class to reflect the new ordering rule. The modified code can be found in `Disc.java` file